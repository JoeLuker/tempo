version: '3.8'

services:
  # TEMPO API Backend
  tempo-api:
    build:
      context: .
      dockerfile: Dockerfile
      target: final
    container_name: tempo-api
    ports:
      - "8000:8000"
    environment:
      - TEMPO_API_HOST=0.0.0.0
      - TEMPO_API_PORT=8000
      - TEMPO_MODEL_ID=${TEMPO_MODEL_ID:-deepcogito/cogito-v1-preview-llama-3B}
      - TEMPO_MODEL_DEVICE=${TEMPO_MODEL_DEVICE:-cpu}
      - TEMPO_DEBUG=${TEMPO_DEBUG:-false}
      - HF_TOKEN=${HF_TOKEN:-}
    volumes:
      # Mount model cache to avoid re-downloading
      - tempo-models:/app/.cache/huggingface
      # Mount output directory for persistence
      - ./output:/app/output
      # Mount logs
      - ./logs:/app/logs
      # Mount config if it exists
      - ./config.json:/app/config.json:ro
    command: ["uvicorn", "api:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

  # TEMPO Frontend (Development)
  tempo-frontend:
    build:
      context: .
      dockerfile: Dockerfile
      target: frontend-builder
    container_name: tempo-frontend
    ports:
      - "5174:5174"
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost:8000
    volumes:
      # Mount source for hot reloading
      - ./frontend:/app/frontend
      - /app/frontend/node_modules  # Exclude node_modules
    working_dir: /app/frontend
    command: ["npm", "run", "dev", "--", "--host", "0.0.0.0", "--port", "5174"]
    depends_on:
      - tempo-api
    restart: unless-stopped

  # Optional: Nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: tempo-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - tempo-api
      - tempo-frontend
    profiles:
      - production
    restart: unless-stopped

  # Optional: Model downloader service
  model-setup:
    build:
      context: .
      dockerfile: Dockerfile
      target: python-base
    container_name: tempo-model-setup
    environment:
      - HF_TOKEN=${HF_TOKEN:-}
    volumes:
      - tempo-models:/app/.cache/huggingface
    command: ["python", "setup_models.py", "--model", "${TEMPO_MODEL_ID:-deepcogito/cogito-v1-preview-llama-3B}"]
    profiles:
      - setup

volumes:
  tempo-models:
    name: tempo-models
    driver: local

networks:
  default:
    name: tempo-network